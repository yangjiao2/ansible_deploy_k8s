- name: Copy etcd csr
  delegate_to: localhost
  run_once: true
  template:
    src: templates/{{ item }}.j2
    dest: "{{ role_path }}/files/{{ item }}"
  with_items:
    - "etcd-csr.json"

- name: Copy system unit
  template:
    src: templates/{{ item }}.j2
    dest: /etc/systemd/system/{{ item }}
  with_items:
    - "kube-etcd.service"

- name: Copy etcd and etcdctl
  copy:
    src: "{{ item }}"
    dest: "{{ ETCD_DIR }}/bin"
    mode: 0755
  with_fileglob:
    - "v3.3.19/*"

- name: Generate etcd certificate
  shell: "roles/cert/bin/cfssl gencert 
  -ca=roles/cert/files/ca.pem 
  -ca-key=roles/cert/files/ca-key.pem 
  -config=roles/cert/files/ca-config.json
  -profile=kubernetes roles/etcd/files/etcd-csr.json | 
  roles/cert/bin/cfssljson -bare roles/etcd/files/etcd "
  delegate_to: localhost
  run_once: true

- name: Copy etcd pem and key
  copy:
    src: "{{ item }}"
    dest: "{{ ETCD_SSL_DIR }}/{{ item }}"
    mode: 0755
  with_items:
    - "etcd.pem"
    - "etcd-key.pem"

- name: Just force systemd to reread configs (2.4 and above)
  systemd:
    daemon_reload: yes

- name: Enable etcd service
  systemd:
    name: kube-etcd
    enabled: yes
    masked: no

- name: Restart etcd service
  systemd:
    state: restarted
    name: kube-etcd

- name: Check etcd health
  shell: "ETCDCTL_API=3 {{ ETCD_DIR }}/bin/etcdctl --endpoints=https://{{ ansible_host }}:2379 
  --cacert={{ K8S_SSL_DIR }}/ca.pem --cert={{ ETCD_SSL_DIR }}/etcd.pem 
  --key={{ ETCD_SSL_DIR }}/etcd-key.pem endpoint health"
  register: etcd_health_res
  retries: 10
  delay: 3
  until: etcd_health_res.rc == 0
  tags: 
    - "status"

- name: Echo etcd health result
  debug:
    msg: "{{ etcd_health_res.stdout }}"
  tags: 
    - "status"

- name: Get etcd leader
  shell: "ETCDCTL_API=3 {{ ETCD_DIR }}/bin/etcdctl -w table --cacert={{ K8S_SSL_DIR }}/ca.pem 
  --cert={{ ETCD_SSL_DIR }}/etcd.pem --key={{ ETCD_SSL_DIR }}/etcd-key.pem 
  --endpoints={{ ETCD_ENDPOINTS }} endpoint status"
  register: etcd_leader_res
  run_once: true
  retries: 10
  delay: 3
  until: etcd_leader_res.rc == 0
  tags: 
    - "status"

- name: Echo etcd leader
  debug:
    msg: "{{ etcd_leader_res.stdout }}"
  run_once: true
  tags: 
    - "status"
